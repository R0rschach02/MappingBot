#include <ESP32Servo.h>
#include <Wire.h>        // Instantiate the Wire library
#include <TFLI2C.h>      // TFLuna-I2C Library v.0.1.1

#define SCL_pin 22
#define SDA_pin 21

TFLI2C tflI2C;

int16_t  tfDist;    // distance in centimeters
int16_t  tfAddr = TFL_DEF_ADR;  // Use this default I2C address or
                                // set variable to your own value
 
Servo myservo;  // create servo object to control a servo
// 16 servo objects can be created on the ESP32
 
int pos = 0;    // variable to store the servo position
// Recommended PWM GPIO pins on the ESP32 include 2,4,12-19,21-23,25-27,32-33 
int servoPin = 26;
 
void setup() 
{ 
  Serial.begin( 230400);  // Initalize serial port
  // Allow allocation of all timers
  ESP32PWM::allocateTimer(0);
  ESP32PWM::allocateTimer(1);
  ESP32PWM::allocateTimer(2);
  ESP32PWM::allocateTimer(3);
  myservo.setPeriodHertz(50);    // standard 50 hz servo
  myservo.attach(servoPin, 500, 2500); // attaches the servo on pin 18 to the servo object   1000, 2000
  // using default min/max of 1000us and 2000us
  // different servos may require different min/max settings
  // for an accurate 0 to 180 sweep
  pinMode(SCL_pin, INPUT_PULLUP);
  pinMode(SDA_pin, INPUT_PULLUP);

  myservo.write(80);
  delay(1000);
  
  Wire.begin(SDA_pin, SCL_pin);           // Initalize Wire library
}
 
void loop() 
{

/*
  myservo.write(30);    // tell servo to go to position in variable 'pos' // davor auf 0
  delay(1000);

  myservo.write(115);    // tell servo to go to position in variable 'pos' // davor auf 360
  delay(1000);

  tflI2C.getData( tfDist, tfAddr); 
    
  Serial.print("Dist: ");
  Serial.println(tfDist);          // print the data...
  delay(25);
*/
  

  
  for (pos = 30; pos <= 115; pos += 1) 
  { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);    // tell servo to go to position in variable 'pos'
    delay(30);             // waits 15ms for the servo to reach the position
  }

  
  for (pos = 115; pos >= 30; pos -= 1) 
  { // goes from 180 degrees to 0 degrees
    myservo.write(pos);    // tell servo to go to position in variable 'pos'
    delay(30);             // waits 15ms for the servo to reach the position
  }

 
}
